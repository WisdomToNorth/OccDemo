name: Linux

on: [push, pull_request]

jobs:
    build-linux:

        runs-on: ubuntu-latest

        steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Install brew
          run: |
            sudo apt-get install build-essential procps curl file git
            sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
            test -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv)
            test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
            test -r ~/.profile
            echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile
            echo "export PATH=\"$(brew --prefix)/bin:$PATH\"" >>~/.profile
            echo "export PATH=\"$(brew --prefix)/bin:$PATH\"" >>~/.bashrc
            echo "export PATH=\"$(brew --prefix)/bin:$PATH\"" >>~/.zshrc
            source ~/.profile
            source ~/.bashrc
            source ~/.zshrc

        - name: Install Envs
          run: |
            sudo apt update
            sudo apt install qtbase5-dev qtbase5-dev-tools
            brew install opencascade
            brew install ninja

        - name: Ninja build Release
          working-directory: ${{github.workspace}}
          run: |
            cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE:STRING=Release \
            -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_C_COMPILER:FILEPATH=/usr/bin/gcc \
            -DCMAKE_CXX_COMPILER=/usr/bin/g++ -B${{github.workspace}}/build/Linux_Ninja_Release \
            -S${{github.workspace}} -G Ninja
            cmake -B build
            cmake --build ${{github.workspace}}/build/Linux_Ninja_Release --config Release --target all --

        - name: Execute Unit Tests
          working-directory: ${{github.workspace}}/build/Linux_Ninja_Release
          run: |
            ctest -T test -R
